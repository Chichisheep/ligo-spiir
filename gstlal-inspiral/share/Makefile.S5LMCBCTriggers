#
# User data
#


# controls triggers
IFOS = H1 L1
START = 852393970
STOP =  854813170
TAG = pipe_compare
WEBDIR = ~/public_html/${START}-${STOP}-${TAG}
NUMBANKS = 5
BANK_CACHE_PREFIX = ../bank_test/
BANK_CACHE_SUFFIX = _bank.cache


# Injections
# The seed is the string before the suffix _injections.xml
# Change as appropriate, whitespace is important
INJECTIONS := 1_injections.xml 2_injections.xml 3_injections.xml 4_injections.xml 5_injections.xml 6_injections.xml
MIN_DIST = 1000
MAX_DIST = 80000
MIN_MASS1 = 1.0
MAX_MASS1 = 3.0
MIN_MASS2 = 1.0
MAX_MASS2 = 3.0
MIN_TOTAL_MASS = 2.0
MAX_TOTAL_MASS = 6.0
FLOW = 35

#
# Stuff the user shouldn't have to mess with
#

#
# Epoch specific info.  Note that an analysis that spans these boundaries would
# be problematic but there are no checks done for that
#

TRUE := $(shell python -c "print 0 < 1")
# FIXME S5 epochs I have no idea if these are correct
S5 := $(shell python -c "print (${START} > 815155213) and (${START} < 863557214)")
S5VSR1 := $(shell python -c "print (${START} > 863557214) and (${START} < 875232014)")
# FIXME S6 epochs I have no idea if these are correct.
S6A := $(shell python -c "print (${START} > 931035296) and (${START} < 935798487)")
S6B := $(shell python -c "print (${START} > 937800015) and (${START} < 947260815)")
S6C := $(shell python -c "print (${START} > 948931215) and (${START} < 961545543)")
S6D := $(shell python -c "print (${START} > 961545543) and (${START} < 1000000000)")

ifeq (${S5}, ${TRUE})
VETO_DEF_FILE=H1H2L1-CBC_LOWMASS_DQ_VETO_CATEGORIES-847555570-16001644.xml
SEG_SERVER=https://metaserver.phy.syr.edu 
VETO_SERVER=https://www.lsc-group.phys.uwm.edu/ligovirgo/cbc/public/segments/S5/
LIGO_FRAME_TYPE='$*_RDS_C03_L2'
LIGO_SEGMENTS="$*:Science,$*:Injection"
LIGO_VETOES="$*:Injection"
CHANNEL_NAMES:=--channel-name=H1=LSC-STRAIN --channel-name=H2=LSC-STRAIN --channel-name=L1=LSC-STRAIN
endif

ifeq (${S5VSR1}, ${TRUE})
VETO_DEF_FILE=H1H2L1V1-CBC_LOWMASS_DQ_VETO_CATEGORIES-863557214-11674800.xml
SEG_SERVER=https://metaserver.phy.syr.edu 
VETO_SERVER=https://www.lsc-group.phys.uwm.edu/ligovirgo/cbc/public/segments/S5/
LIGO_FRAME_TYPE='$*_RDS_C03_L2'
LIGO_SEGMENTS="$*:Science,$*:Injection"
LIGO_VETOES="$*:Injection"
CHANNEL_NAMES:=--channel-name=H1=LSC-STRAIN --channel-name=H2=LSC-STRAIN --channel-name=L1=LSC-STRAIN
# FIXME add virgo
endif

#FIXME add other S6 epochs
ifeq (${S6D}, ${TRUE})
VETO_DEF_FILE=H1L1V1-S6_CBC_LOWMASS_D_OFFLINE-961545543-0.xml
SEG_SERVER=https://segdb.ligo.caltech.edu
VETO_SERVER=https://www.lsc-group.phys.uwm.edu/ligovirgo/cbc/public/segments/S6/
LIGO_FRAME_TYPE='$*_LDAS_C02_L2'
LIGO_SEGMENTS="$*:DMT-SCIENCE:4,$*:DMT-INJECTION"
LIGO_VETOES="$*:DMT-INJECTION"
VIRGO_FRAME_TYPE:=HrecV2
VIRGO_SEGMENTS:=V1:ITF_SCIENCEMODE:7,V1:INJECTION_INSPIRAL,V1:INJECTION_BURST
VIRGO_VETOES:=V1:INJECTION_INSPIRAL,V1:INJECTION_BURST
endif


#
# Code to build the workflow
#


# Misc useful definitions
empty:=
space:= $(empty) $(empty)
comma:= ,

# the point of this is to build the string e.g. H1=../bank/H1_bank.cache,L1=../bank/L1_bank.cache
BANK_CACHE_STRING:= $(addprefix $(BANK_CACHE_PREFIX),$(IFOS))
BANK_CACHE_STRING:= $(addprefix =,$(BANK_CACHE_STRING))
BANK_CACHE_STRING:= $(addsuffix $(BANK_CACHE_SUFFIX),$(BANK_CACHE_STRING))
BANK_CACHE_STRING:= $(join $(IFOS),$(BANK_CACHE_STRING))
BANK_CACHE_STRING:= $(strip $(BANK_CACHE_STRING))
BANK_CACHE_STRING:= $(subst $(space),$(comma),$(BANK_CACHE_STRING))

# Segments file names
segments_suffix := _segmentspadded.xml
SEGMENTS_FILES  := $(addsuffix $(segments_suffix),$(IFOS))

# Vetoes file names
vetoes_suffix := _vetoes.xml
VETOES_FILES  := $(addsuffix $(vetoes_suffix),$(IFOS))

# Frame cache file names
frame_suffix      := _frame.cache
FRAME_CACHE_FILES := $(addsuffix $(frame_suffix),$(IFOS))

# Injection file names
injections:=--injections $(space)
INJECTION_LIST := $(subst $(space), $(injections), $(INJECTIONS))


#
# Workflow
#


all : dag

plots :
	mkdir plots
	mkdir $(WEBDIR)

tisi.xml :
	#FIXME what we really need is a single slide vector
	ligolw_tisi --instrument=H1=0:0:0 --instrument=H2=0:0:0 --instrument=L1=0:3.14159:3.14159 --instrument=V1=0:0:0 tisi.xml

dag : vetoes.xml segments.xml frame.cache tisi.xml plots $(INJECTIONS)
	gstlal_s5_pbh_trigger_pipe --data-source frames --gps-start-time $(START) --gps-end-time $(STOP) --frame-cache frame.cache --frame-segments-file segments.xml --frame-segments-name datasegments  --vetoes vetoes.xml --control-peak-time 0 --num-banks $(NUMBANKS) --fir-stride 4 --web-dir $(WEBDIR) --time-slide-file tisi.xml $(INJECTION_LIST) --bank-cache $(BANK_CACHE_STRING) $(CHANNEL_NAMES) 

V1_vetoes.xml:
	ligolw_segment_query --segment-url=${SEG_SERVER} -q --gps-start-time ${START} --gps-end-time ${STOP} --include-segments=$(VIRGO_VETOES) --result-name=vetoes > $@
	ligolw_segments_compat $@

%_vetoes.xml:
	ligolw_segment_query --segment-url=${SEG_SERVER} -q --gps-start-time ${START} --gps-end-time ${STOP} --include-segments=$(LIGO_VETOES) --result-name=vetoes > $@
	ligolw_segments_compat $@

cats.xml:
	wget ${VETO_SERVER}/${VETO_DEF_FILE} --output-document $@
	ligolw_segments_from_cats --segment-url=${SEG_SERVER} --veto-file=$@ --gps-start-time ${START} --gps-end-time ${STOP} --cumulative-categories

V1_segmentspadded.xml: cats.xml
	ligolw_segment_query --segment-url=${SEG_SERVER} -q --gps-start-time ${START} --gps-end-time ${STOP} --include-segments=$(VIRGO_SEGMENTS) --result-name=datasegments > $@
	# FIXME HACK to use predictive file names, can ligolw_segments_from_cats take a --output ??
	# FIXME ignore the return value since it will always be 1 if we have actually subtracted any segments
	- ligolw_segment_diff --segment --result-name datasegments $@ $*-VETOTIME_CAT1-*.xml --output-file $@
	ligolw_segments_compat $@
	gstlal_segments_trim --segment-name datasegments --min-length 600 --trim 32 --output $@ $@

%_segmentspadded.xml: cats.xml
	ligolw_segment_query --segment-url=${SEG_SERVER} -q --gps-start-time ${START} --gps-end-time ${STOP} --include-segments=$(LIGO_SEGMENTS) --result-name=datasegments > $@
	# FIXME HACK to use predictive file names, can ligolw_segments_from_cats take a --output ??
	# FIXME ignore the return value since it will always be 1 if we have actually subtracted any segments
	- ligolw_segment_diff --segment --result-name datasegments $@ $*-VETOTIME_CAT1-*.xml --output-file $@
	ligolw_segments_compat $@
	gstlal_segments_trim --segment-name datasegments --min-length 600 --trim 32 --output $@ $@

vetoes.xml: $(VETOES_FILES)
	ligolw_add $(VETOES_FILES) > vetoes.xml

V1_frame.cache:
	#FIXME horrible hack to get the observatory, not guaranteed to work
	$(eval OBS:=$*)
	$(eval OBS:=$(subst 1,$(empty),$(OBS)))
	$(eval OBS:=$(subst 2,$(empty),$(OBS)))
	ligo_data_find -o $(OBS) -t $(VIRGO_FRAME_TYPE) -l  -s $(START) -e $(STOP) --url-type file > $@

%_frame.cache:
	#FIXME horrible hack to get the observatory, not guaranteed to work
	$(eval OBS:=$*)
	$(eval OBS:=$(subst 1,$(empty),$(OBS)))
	$(eval OBS:=$(subst 2,$(empty),$(OBS)))
	ligo_data_find -o $(OBS) -t $(LIGO_FRAME_TYPE) -l  -s $(START) -e $(STOP) --url-type file > $@

frame.cache: $(FRAME_CACHE_FILES)
	cat $(FRAME_CACHE_FILES) > frame.cache

segments.xml: $(SEGMENTS_FILES)
	ligolw_add --output segments.xml $(SEGMENTS_FILES)
	ligolw_cut --delete-column segment:segment_def_cdb --delete-column segment:creator_db --delete-column segment_definer:insertion_time segments.xml

%_injections.xml: 
	lalapps_inspinj \
		--output $@ \
		--seed $* \
		--f-lower $(FLOW) \
		--gps-start-time $(START) \
		--gps-end-time $(STOP) \
		--t-distr uniform \
		--time-step 100 \
		--time-interval 20 \
		--i-distr uniform \
		--l-distr random \
		--d-distr log10 \
		--min-distance $(MIN_DIST) \
		--max-distance $(MAX_DIST) \
		--m-distr componentMass \
		--min-mass1 $(MIN_MASS1) \
		--max-mass1 $(MAX_MASS1) \
		--min-mass2 $(MIN_MASS2) \
		--max-mass2 $(MAX_MASS2) \
		--min-mtotal $(MIN_TOTAL_MASS) \
		--max-mtotal $(MAX_TOTAL_MASS) \
		--waveform  TaylorT4threePointFivePN \
		--taper-injection start \
		--disable-spin

realclean :
	rm -r *.sub *.dag* *.cache *.sh logs *.xml *.gz *.sqlite plots $(WEBDIR) *.html Images *.css *.js
